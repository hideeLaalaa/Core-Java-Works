import java.util.Scanner;
import java.util.Random;
public class ch66 {
	Random ran = new Random();
	private static int x=12;// field accessible to all methods of this class
	public static void main(String[] args) {
		
		//maximum of three numbers
/*		Scanner input = new Scanner(System.in);
		
		System.out.print("Enter three decimal values seperated with spaces:");
		double number1= input.nextDouble();
		double number2=input.nextDouble();
		double number3=input.nextDouble();
		
		double result=maximum(number1,number2,number3);
		
		System.out.println("maximum is "+ result +"    "+ Math.floor(result));
	}
		
		public static double maximum(double x,double y,double z ){
			double max=x;
			if (y>max) max=y;
			if (z>max) max=z;
			return max;
		}
*/
		//SCOPE FIELD AND LOCAL VARIABLE ISH
/*		int x=7; //main's local variable shadows field
		System.out.println("Local x is " + x);
		local();
		field();
		local();
		field();
		System.out.printf("\n local x in main is %d\n",x);
	}
	
	public static void local(){
		int x=62; //just for this method
		System.out.println("\nOn entering local variable is " + x);
		++x;
		System.out.printf("\n On exitting local variable is %d\n", x);
	}// end method local
	
	public static void field(){
		System.out.println("\nOn entering field is  " + x);
		x*=14;
		System.out.println("\n On exit field is "+ x );
		}// end method field
	*/
		// METHOD OVERLOADING..DIFF METHODS WITH SAME NAME
/*		System.out.printf("Square of integer 7 is %d\n", square(7));
		System.out.printf("Square of double 7.5 is %f\n",square(9.0));
	}//end main
	
	public static int square(int value){
		System.out.printf("\n Called square with int argument: %d\n", value);
		return value*value;
	}
	public static double square(double value){
		System.out.printf("\nCalled square with double argument is %f\n", value);
		return value*value;
	}*/
		//PARKING CHARGES
/*		Scanner input = new Scanner(System.in);
		int hours;
		do{
		System.out.print("-1 to exit..Please enter the hours parked yesterday for this customer:");
		hours=input.nextInt();
		if(hours<=24)
		System.out.println("You parked for "+ hours+ " hours yesterday,ur charge is $"+charges(hours));
		else System.out.println("C'mon there are just 24 hours in a day\n");
		}while(hours !=-1);
	}
	public static double charges(int hours){
		double amount;
		switch(hours){
		case 1:case 2:case 3:amount = 2.00;
		break;
		case 24: amount = 10.00;
		break;
		default: amount =(0.5 *(hours -3))+ 2;
		}
		return amount;
	}*/
		// ROUNDING NUMBERS TO FLOOR DOUBLE
/*		Scanner input=new Scanner(System.in);
		System.out.print("Enter the number:");
		double x = input.nextDouble();
		double y = (int) x;
		System.out.printf("the original number is %.2f\nThe rounded number is %.1f ",x,y);
	*/
		//ROUNDING NUMBERS TO HUNDRETH,THOUSANDTH AND TENTH 
/*		double y = 55.278;
		double x =(int)(y*10+0.5);
		System.out.println(x/10);
		System.out.println((int) y);
		double z=((int)(y*100+0.5));
		System.out.println(z/100);
		double thou=(int)( y*1000+0.5);
		System.out.println(thou/1000);
	*/
		//WRITING METHOD TO RAISE AN INTEGER TO POWER  AND TESTING
/*		int base;int power;
		Scanner input = new Scanner(System.in);
	   do{
		   System.out.print("Enter the base number and power seperated with a space or enter:");
		   base=input.nextInt();
		   power=input.nextInt();
	   }while(base<0&&power<0);
	   System.out.print(power(base,power));
	}// end main
	public static int power(int base,int power){
		int x= base;
		for(int i=1;i<power;i++)
			base=base*x;
		return base;
 	}
*/	
		//METHOD HYPOTENUSE CALC AND TEST
/*		Scanner input = new Scanner(System.in);
		System.out.print("Enter the sides of the triangle seperated with a space:");
		double y=input.nextDouble();
		double x=input.nextDouble();
		System.out.print(hypotenuse(y,x));	
	}// end main
	
	public static double hypotenuse(double side1,double side2){
		side1*=side1;side2*=side2;
		return Math.sqrt(side1+side2);	
   	}// end method
*/	
		//METHOD MULTIPLES
/*		Scanner input= new Scanner(System.in);
		int no1;int no2;
		do{
			System.out.print("-1 to exit...Enter both numbers seperated with space:");
			no1=input.nextInt();
			no2=input.nextInt();
			System.out.println(multiple(no1,no2));
		}while(no1!=-1||no2!=-1);
	}// END MAIN
	
	public static boolean multiple(int number1,int number2){
		boolean x=(number1%number2==0);
		return x;
	}
*/	
		// EVEN OR NOT(ODD)
/*	Scanner in = new Scanner(System.in);
	int no;
	do{
			System.out.print("Enter the number you want to test if its even or not:");
			no=in.nextInt();
			if(no!=-1)
			System.out.println(even(no));
		}while(no!=-1);
	}END MAIN
	
	public static boolean even(int number){
		return number%2==0;
	}
*/
		//METHOD DISPLAYING A SQUARE OF ASTERIKS
/*	Scanner input = new Scanner(System.in);
	System.out.print("Enter the number of sides:");
	int sides=input.nextInt();
	square(sides);
	}//END MAIN
	
	public static void square(int number){
		Scanner input=new Scanner(System.in);
		System.out.print("Enter the character to be filled:");
		char fill = input.next().charAt(0);
		for(int s=1;s<=number;s++){
		for(int i=1;i<=number;i++)
			System.out.printf(fill+" ");
			System.out.println();
		}
			}
*/
		//METHOD TO CALCULATE AREA OF A CIRCLE
/*		Scanner in = new Scanner(System.in);
		System.out.print("Enter the radius:");
		double rad = in.nextDouble();
		System.out.println("The area of your circle is "+ circleArea(rad));
	}end main
	
	public static double circleArea(double radius){
		double area=(Math.PI*Math.pow(radius, 2));
		return area;
	 }
*/
		//TESTING AND METHOD FOR SEPERATING DIGITS
/*		Scanner input = new Scanner(System.in);
		System.out.print("Enetr the digits:");
		int digit = input.nextInt();
		sep(digit);
	}

	public static void sep(int a){
		for(int i=100000000;i>0;i/=10){
			int se=a/i;
			int s=se%10;
			if(se!=0)
			System.out.printf("%d  ",s);
			
		}//END LOOP
	  }//END METHOD TO SEPERATE DIGITS
  */
		//TEMPERATURE CONVERSION
/*		Scanner input = new Scanner(System.in);
		System.out.print("Enetr the celsius value:");
		double cel=input.nextDouble();
		System.out.println("Fahrenheit corresponding value is "+fahrenheit(cel));
		System.out.print("Enter the fahrenheit value:");
		double fah=input.nextDouble();
		System.out.println("The Celsius corresponding value is "+celsius(fah));
	}//End main
	
	public static double fahrenheit(double celsius){
		double fah= 9.0/5.0 * celsius + 32;
		return fah;
	}
	public static double celsius(double fah){
		double celsius= 5.0/9.0 * (fah - 32);
		return celsius;
	 }
  */	
		//METHOD TO GET THE SMALLEST OF THREE NUMBERS
/*		Scanner in=new Scanner(System.in);
		System.out.print("Enter the three floating point numbers you want to compare:");
		float x= in.nextFloat();
		float y = in.nextFloat();
		float z = in.nextFloat();
		System.out.println("Minimum of the three is "+ min3(x,y,z));
	}//End main
	
	public static float min3(float a,float b,float c){
		return Math.min(a, Math.min(c, b));
	  }
  */
		// PERFECT NUMBERS
/*		displayPrime(100000);
	}//end main
	
	public static void displayPrime(int no )
	{	for(int i=1;i<=no;i++)
		{	int div=0;
			for(int j=i;j>1;j--)
			{	if(i%j==0)
				{	div=i/j + div;
					if(div==i)
					{
						System.out.println(i + " is a perfectly perfect number");
						System.out.print("Factors are: ");
						for(int k=i;k>1;k--)
							if(i%k==0)System.out.print(i/k + " ");
							System.out.println();
					}
				}
			}
			
		}
	 }
  */
		prime(7);
	}
	
	public static void prime(int number){
		int pri=0;
		for(int i=2;i<number;i++){
			if(number%i==0)
			pri = -1;
		}
		if(pri!=-1)
			System.out.println(number +" is a prime number");
		else
			System.out.println(number +" is not a prime number");
			
	}
		
		
}